version: '2.1'

x-docker-config: &x-docker-config
  image: circleci/python:3.7.4
  environment:
    PIPENV_VENV_IN_PROJECT: "yes"

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test

      - deploy-dev:
          requires:
            - test
          filters:
            branches:
              only:
                - master

      - wait-for-deploy-production:
          type: approval
          requires:
            - test
            - deploy-dev
          filters:
            branches:
              only:
                - master

      - deploy-production:
          requires:
            - test
            - deploy-dev
            - wait-for-deploy-production
          filters:
            branches:
              only:
                - master

jobs:
  test:
    docker:
      - *x-docker-config
    steps:
      - checkout
      - install_test_dependencies

      - run:
          name: Tests
          command: make test

      - run:
          name: Lint
          command: make lint

  deploy-dev:
    docker:
      - *x-docker-config
    steps:
      - checkout
      - deploy:
          env: dev
  
  deploy-production:
    docker:
      - *x-docker-config
    steps:
      - checkout
      - deploy:
          env: prod

commands:
  install_python_dependencies:
    steps:
      - restore_cache:
          keys:
            - '{% raw %}v1-python-dependencies-{{ checksum "Pipfile.lock" }}{% endraw %}'
            # fallback to using the latest cache if no exact match is found
            - v1-python-dependencies-
      - run:
          name: Install dependencies
          command: |
            pip install -U pip wheel setuptools pipenv
            make install
      - save_cache:
          paths:
            - ./.venv
          key: '{% raw %}v1-python-dependencies-{{ checksum "Pipfile.lock" }}{% endraw %}'

  install_test_dependencies:
    steps:
      - install_python_dependencies

  install_deploy_dependencies:
    steps:
      - install_python_dependencies

  deploy:
    description: "Deploy to an <Environment>"
    parameters:
      env:
        type: enum
        enum:
          - dev
          - prod
    steps:
      - install_deploy_dependencies
      - run:
          command: STAGE='<<parameters.env>>' make deploy
